<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gcexe.monitor.persistence.dao.SysIPMapper">
	<resultMap id="BaseResultMap"
		type="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="ip_name" jdbcType="VARCHAR" property="ipName" />
		<result column="ip_com" jdbcType="VARCHAR" property="ipCom" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP"
			property="updateTime" />
		<result column="creator" jdbcType="VARCHAR" property="creator" />
		<result column="updator" jdbcType="VARCHAR" property="updator" />
		<result column="icp_record" jdbcType="INTEGER"
			property="icpRecord" />
		<result column="gn_record" jdbcType="INTEGER"
			property="gnRecord" />
		<result column="monitor_rate_day" jdbcType="INTEGER"
			property="monitorRateDay" />
		<result column="monitor_rate_week" jdbcType="INTEGER"
			property="monitorRateWeek" />
		<result column="monitor_rate_month" jdbcType="INTEGER"
			property="monitorRateMonth" />
		<result column="monitor_rate_year" jdbcType="INTEGER"
			property="monitorRateYear" />
		<result column="open_task" jdbcType="INTEGER"
			property="openTask" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		<result column="ip_list" jdbcType="LONGVARCHAR"
			property="ipList" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		id, ip_name, ip_com, create_time, update_time, creator, updator,
		icp_record, gn_record,
		monitor_rate_day, monitor_rate_week,
		monitor_rate_month, monitor_rate_year, open_task
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		ip_list
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from sys_ip
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		delete from sys_ip
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		insert into sys_ip (id, ip_name, ip_com,
		create_time, update_time,
		creator,
		updator, icp_record, gn_record,
		monitor_rate_day,
		monitor_rate_week, monitor_rate_month,
		monitor_rate_year, open_task,
		ip_list
		)
		values (#{id,jdbcType=INTEGER}, #{ipName,jdbcType=VARCHAR},
		#{ipCom,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR},
		#{updator,jdbcType=VARCHAR}, #{icpRecord,jdbcType=INTEGER},
		#{gnRecord,jdbcType=INTEGER},
		#{monitorRateDay,jdbcType=INTEGER},
		#{monitorRateWeek,jdbcType=INTEGER},
		#{monitorRateMonth,jdbcType=INTEGER},
		#{monitorRateYear,jdbcType=INTEGER}, #{openTask,jdbcType=INTEGER},
		#{ipList,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		insert into sys_ip
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="ipName != null">
				ip_name,
			</if>
			<if test="ipCom != null">
				ip_com,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="updator != null">
				updator,
			</if>
			<if test="icpRecord != null">
				icp_record,
			</if>
			<if test="gnRecord != null">
				gn_record,
			</if>
			<if test="monitorRateDay != null">
				monitor_rate_day,
			</if>
			<if test="monitorRateWeek != null">
				monitor_rate_week,
			</if>
			<if test="monitorRateMonth != null">
				monitor_rate_month,
			</if>
			<if test="monitorRateYear != null">
				monitor_rate_year,
			</if>
			<if test="openTask != null">
				open_task,
			</if>
			<if test="ipList != null">
				ip_list,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="ipName != null">
				#{ipName,jdbcType=VARCHAR},
			</if>
			<if test="ipCom != null">
				#{ipCom,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="updator != null">
				#{updator,jdbcType=VARCHAR},
			</if>
			<if test="icpRecord != null">
				#{icpRecord,jdbcType=INTEGER},
			</if>
			<if test="gnRecord != null">
				#{gnRecord,jdbcType=INTEGER},
			</if>
			<if test="monitorRateDay != null">
				#{monitorRateDay,jdbcType=INTEGER},
			</if>
			<if test="monitorRateWeek != null">
				#{monitorRateWeek,jdbcType=INTEGER},
			</if>
			<if test="monitorRateMonth != null">
				#{monitorRateMonth,jdbcType=INTEGER},
			</if>
			<if test="monitorRateYear != null">
				#{monitorRateYear,jdbcType=INTEGER},
			</if>
			<if test="openTask != null">
				#{openTask,jdbcType=INTEGER},
			</if>
			<if test="ipList != null">
				#{ipList,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		update sys_ip
		<set>
			<if test="ipName != null">
				ip_name = #{ipName,jdbcType=VARCHAR},
			</if>
			<if test="ipCom != null">
				ip_com = #{ipCom,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="updator != null">
				updator = #{updator,jdbcType=VARCHAR},
			</if>
			<if test="icpRecord != null">
				icp_record = #{icpRecord,jdbcType=INTEGER},
			</if>
			<if test="gnRecord != null">
				gn_record = #{gnRecord,jdbcType=INTEGER},
			</if>
			<if test="monitorRateDay != null">
				monitor_rate_day = #{monitorRateDay,jdbcType=INTEGER},
			</if>
			<if test="monitorRateWeek != null">
				monitor_rate_week = #{monitorRateWeek,jdbcType=INTEGER},
			</if>
			<if test="monitorRateMonth != null">
				monitor_rate_month =
				#{monitorRateMonth,jdbcType=INTEGER},
			</if>
			<if test="monitorRateYear != null">
				monitor_rate_year = #{monitorRateYear,jdbcType=INTEGER},
			</if>
			<if test="openTask != null">
				open_task = #{openTask,jdbcType=INTEGER},
			</if>
			<if test="ipList != null">
				ip_list = #{ipList,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		update sys_ip
		set ip_name = #{ipName,jdbcType=VARCHAR},
		ip_com =
		#{ipCom,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		creator =
		#{creator,jdbcType=VARCHAR},
		updator = #{updator,jdbcType=VARCHAR},
		icp_record = #{icpRecord,jdbcType=INTEGER},
		gn_record =
		#{gnRecord,jdbcType=INTEGER},
		monitor_rate_day =
		#{monitorRateDay,jdbcType=INTEGER},
		monitor_rate_week =
		#{monitorRateWeek,jdbcType=INTEGER},
		monitor_rate_month =
		#{monitorRateMonth,jdbcType=INTEGER},
		monitor_rate_year =
		#{monitorRateYear,jdbcType=INTEGER},
		open_task =
		#{openTask,jdbcType=INTEGER},
		ip_list = #{ipList,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.gcexe.monitor.persistence.entity.SysIP">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			19:21:46 CST 2018. -->
		update sys_ip
		set ip_name = #{ipName,jdbcType=VARCHAR},
		ip_com =
		#{ipCom,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		creator =
		#{creator,jdbcType=VARCHAR},
		updator = #{updator,jdbcType=VARCHAR},
		icp_record = #{icpRecord,jdbcType=INTEGER},
		gn_record =
		#{gnRecord,jdbcType=INTEGER},
		monitor_rate_day =
		#{monitorRateDay,jdbcType=INTEGER},
		monitor_rate_week =
		#{monitorRateWeek,jdbcType=INTEGER},
		monitor_rate_month =
		#{monitorRateMonth,jdbcType=INTEGER},
		monitor_rate_year =
		#{monitorRateYear,jdbcType=INTEGER},
		open_task =
		#{openTask,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<resultMap id="searResultMap"
		type="com.gcexe.monitor.persistence.statistics.entity.IPSearchStatis">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="ip_name" jdbcType="VARCHAR" property="ipName" />
		<result column="ip_cnt" jdbcType="INTEGER" property="ipCnt" />
		<result column="monitor_rate_day" jdbcType="INTEGER"
			property="monitorRate" />
		<result column="open_task" jdbcType="INTEGER"
			property="openTask" />
		<result column="update_time" property="uTime" />
	</resultMap>
	<select id="search" parameterType="map"
		resultMap="searResultMap">
		select id,
		ip_name,(LENGTH(ip_list)-LENGTH(REPLACE(ip_list,',',''))+1) as
		ip_cnt,monitor_rate_day,open_task,update_time
		from sys_ip limit
		#{pagenum},#{limit};
	</select>

	<select id="getRowCount" resultType="java.lang.Integer">
		select count(*) as count
		from sys_ip ;
	</select>
	<resultMap id="ipTopMap"
		type="com.gcexe.monitor.persistence.statistics.entity.IPTopStatis">
		<result column="cnt" jdbcType="INTEGER" property="cnt" />
		<result column="ip" property="ip" />
	</resultMap>
	<select id="domainCnt" resultMap="ipTopMap">
		SELECT count(ip_domain)as cnt,ip
		from ip_data where record_no is not null
		GROUP BY ip order by cnt desc limit 0,10
	</select>

	<select id="illegalcnt" resultMap="ipTopMap">
		SELECT count(ip_domain)as cnt,ip
		from ip_data where record_no is null
		GROUP BY ip order by cnt desc limit 0,10
	</select>
	
	<resultMap id="ipCntStatis"
		type="com.gcexe.monitor.persistence.statistics.entity.IPCntStatis">
		<result column="cnt" jdbcType="INTEGER" property="cnt" />
		<result column="data_time" property="time" />
	</resultMap>
	<select id="situation" resultMap="ipCntStatis" parameterType="map">
		<if test="param == 0">
			select HOUR(update_time) as time_no  ,count(ip_domain) as cnt,DATE_FORMAT(update_time,'%h') as data_time
			from ip_data 
			where  record_no is not null and DAYOFYEAR(update_time) = DAYOFYEAR(NOW())
			GROUP BY time_no
			order by time_no ASC
		</if>
		<if test="param == 1">
			select DAYOFYEAR(update_time) as time_no ,WEEKDAY(update_time)+1 as data_time ,count(ip_domain) as cnt
			from ip_data 
			where WEEKOFYEAR(NOW()) = WEEKOFYEAR(update_time) and  record_no is not null
			GROUP BY time_no
			order by time_no ASC
		</if>
		<if test="param == 2">
			select DAYOFYEAR(update_time) as time_no , DATE_FORMAT(update_time,'%m-%d') as data_time  ,count(ip_domain)as cnt
			from ip_data 
			where MONTH(NOW()) = MONTH(update_time) and  record_no is not null
			GROUP BY time_no
			order by time_no ASC
		</if>
		<if test="param == 3">
			select month(update_time) as time_no ,count(ip_domain)as cnt ,DATE_FORMAT(update_time,'%m') as data_time
			from ip_data 
			where YEAR(NOW()) = YEAR(update_time) and  record_no is not null
			GROUP BY time_no 
			order by time_no ASC
		</if>
	
	</select>
	<select id="unsituation" resultMap="ipCntStatis" parameterType="map">
		<if test="param == 0">
			select HOUR(update_time) as time_no  ,count(ip_domain) as cnt,DATE_FORMAT(update_time,'%h') as data_time
			from ip_data 
			where  record_no is null and DAYOFYEAR(update_time) = DAYOFYEAR(NOW())
			GROUP BY time_no
			order by time_no ASC
		</if>
		<if test="param == 1">
			select DAYOFYEAR(update_time) as time_no ,WEEKDAY(update_time)+1 as data_time ,count(ip_domain) as cnt
			from ip_data 
			where WEEKOFYEAR(NOW()) = WEEKOFYEAR(update_time) and  record_no is null
			GROUP BY time_no
			order by time_no ASC
		</if>
		<if test="param == 2">
			select DAYOFYEAR(update_time) as time_no , DATE_FORMAT(update_time,'%m-%d') as data_time  ,count(ip_domain)as cnt
			from ip_data 
			where MONTH(NOW()) = MONTH(update_time) and  record_no is null
			GROUP BY time_no
			order by time_no ASC
		</if>
		<if test="param == 3">
			select month(update_time) as time_no ,count(ip_domain)as cnt ,DATE_FORMAT(update_time,'%m') as data_time
			from ip_data 
			where YEAR(NOW()) = YEAR(update_time) and  record_no is null
			GROUP BY time_no 
			order by time_no ASC
		</if>
	
	</select>
	
	<select id="unsituationTotal" resultType="int">		
		select count(ip_domain)as cnt from ip_data where  record_no is null
	</select>
	<select id="situationTotal" resultType="int" parameterType="map">
		select count(ip_domain)as cnt from ip_data where  record_no is not null
	</select>
	<resultMap id="avgCntStatis"
		type="com.gcexe.monitor.persistence.statistics.entity.IPCntStatis">
		<result column="rate" jdbcType="INTEGER" property="cnt" />
		<result column="data_time" property="time" />
	</resultMap>
	<select id="avgsituation" resultMap="avgCntStatis"> 
		<if test="param == 0">
			select f.domain_cnt/f.ip_cnt as rate , f.data_time from (
			select count(*) as domain_cnt,time_no as ddd ,data_time ,
			(select b.ip_cnt from 
			(select count(*) as ip_cnt,time_no from(
			select HOUR(update_time) as time_no  ,ip,DATE_FORMAT(update_time,'%h') as data_time
			from ip_data 
			where DAYOFYEAR(update_time) = DAYOFYEAR(NOW())
			GROUP BY time_no,ip
			order by time_no ASC
			)a
			group by a.data_time)b
			where b.time_no = ddd)as ip_cnt
			from (
			select 
			HOUR(update_time) as time_no  ,ip_domain,
			DATE_FORMAT(update_time,'%h') as data_time
			from ip_data b
			where DAYOFYEAR(update_time) = DAYOFYEAR(NOW())
			GROUP BY time_no,ip_domain
			order by time_no ASC)e
			group by e.time_no)f
		</if>
		<if test="param == 1">
			select f.domain_cnt/f.ip_cnt as rate , f.data_time from (
			select count(*) as domain_cnt,time_no as ddd ,data_time ,
			(select b.ip_cnt from 
			(select count(*) as ip_cnt,time_no from(
			select DAYOFYEAR(update_time) as time_no  ,ip,WEEKDAY(update_time)+1 as data_time 
			from ip_data 
			where WEEKOFYEAR(update_time) = WEEKOFYEAR(NOW())
			GROUP BY time_no,ip
			order by time_no ASC
			)a
			group by a.data_time)b
			where b.time_no = ddd)as ip_cnt
			from (
			select 
			DAYOFYEAR(update_time) as time_no  ,ip_domain,
			WEEKDAY(update_time)+1 as data_time 
			from ip_data b
			where WEEKOFYEAR(update_time) = WEEKOFYEAR(NOW())
			GROUP BY time_no,ip_domain
			order by time_no ASC)e
			group by e.time_no)f
		</if>
		<if test="param == 2">
			select f.domain_cnt/f.ip_cnt as rate , f.data_time from (
			select count(*) as domain_cnt,time_no as ddd ,data_time ,
			(select b.ip_cnt from 
			(select count(*) as ip_cnt,time_no from(
			select DAYOFYEAR(update_time) as time_no  ,ip,DATE_FORMAT(update_time,'%m-%d') as data_time 
			from ip_data 
			where MONTH(update_time) = MONTH(NOW())
			GROUP BY time_no,ip
			order by time_no ASC
			)a
			group by a.data_time)b
			where b.time_no = ddd)as ip_cnt
			from (
			select 
			DAYOFYEAR(update_time) as time_no  ,ip_domain,
			DATE_FORMAT(update_time,'%m-%d') as data_time 
			from ip_data b
			where MONTH(update_time) = MONTH(NOW())
			GROUP BY time_no,ip_domain
			order by time_no ASC)e
			group by e.time_no)f
		</if>
		<if test="param == 3">
			select f.domain_cnt/f.ip_cnt as rate , f.data_time from (
			select count(*) as domain_cnt,time_no as ddd ,data_time ,
			(select b.ip_cnt from 
			(select count(*) as ip_cnt,time_no from(
			select month(update_time) as time_no  ,ip,DATE_FORMAT(update_time,'%m') as data_time
			from ip_data 
			where YEAR(update_time) = YEAR(NOW())
			GROUP BY time_no,ip
			order by time_no ASC
			)a
			group by a.data_time)b
			where b.time_no = ddd)as ip_cnt
			from (
			select 
			month(update_time) as time_no  ,ip_domain,
			DATE_FORMAT(update_time,'%m') as data_time
			from ip_data b
			where YEAR(update_time) = YEAR(NOW())
			GROUP BY time_no,ip_domain
			order by time_no ASC)e
			group by e.time_no)f
		</if>
	</select> 
		
		
		
		
		
		
		
		
		
		
		
		
		
		
</mapper>